{
  "nodes": [
    {
      "id": "ac2233b1-cc3d-497b-9b67-39c6f0365a86",
      "title": "0. How to use the Board",
      "type_specific": {
        "message": "{\"ops\":[{\"insert\":\"Go through the \"},{\"attributes\":{\"color\":\"#ffff00\"},\"insert\":\"yellow \"},{\"insert\":\"cards in order. Follow the instructions on each of these cards.\\n\\nThe \"},{\"attributes\":{\"color\":\"#66a3e0\"},\"insert\":\"blue \"},{\"insert\":\"cards provide more information regarding the process at each step. \\n\\nAdjust and/or run code in the \"},{\"attributes\":{\"background\":\"#b2b200\"},\"insert\":\"linked cells\"},{\"insert\":\". Then, record the details on the \"},{\"attributes\":{\"color\":\"#008a00\"},\"insert\":\"green \"},{\"insert\":\"summary card.\\n\"}]}"
      },
      "edge_connections": [
        {
          "id": "b44b81c0-d5e8-4d1b-b65a-82e831e6625c",
          "connector": "right"
        }
      ],
      "type": "note",
      "position": {
        "x": 250.171875,
        "y": 202.25599999999997
      },
      "size": {
        "width": 256.16,
        "height": 313.064
      },
      "color": "#513063"
    },
    {
      "id": "f3fa4289-b853-4eb0-97b9-b361f7e37afc",
      "title": "1. Describe the experiment",
      "type_specific": {
        "message": "{\"ops\":[{\"insert\":\"No adjustment to notebook required.\\n\"}]}"
      },
      "edge_connections": [
        {
          "id": "b44b81c0-d5e8-4d1b-b65a-82e831e6625c",
          "connector": "left"
        },
        {
          "id": "ffdb866f-7f89-40f9-b6e1-7ffb0391d15d",
          "connector": "right"
        },
        {
          "id": "7f34cda8-d6db-43b9-8f1b-269ce5eefdf5",
          "connector": "top"
        },
        {
          "id": "83e39d3a-b594-4907-85f1-bcb5587712f3",
          "connector": "bottom"
        }
      ],
      "type": "note",
      "position": {
        "x": 615.750244140625,
        "y": 229.68185424804688
      },
      "size": {
        "width": 256.16,
        "height": 258.28
      },
      "color": "#51455b"
    },
    {
      "id": "35aaa8c6-7a71-468d-94fc-5a659a6e5098",
      "title": "2. Import the dataset",
      "type_specific": {
        "message": "{\"ops\":[{\"insert\":\"In the notebook \\\"bayesian_unsupervised.ipynb\\\", adjust the respective lines (linked to the card) to:\\nspecify the \"},{\"attributes\":{\"color\":\"#ffc266\",\"bold\":true},\"insert\":\"path \"},{\"insert\":\"of the dataset file\"},{\"attributes\":{\"list\":\"bullet\"},\"insert\":\"\\n\"},{\"insert\":\"specify if the data is \"},{\"attributes\":{\"color\":\"#ffc266\",\"bold\":true},\"insert\":\"time-series\"},{\"attributes\":{\"list\":\"bullet\"},\"insert\":\"\\n\"},{\"insert\":\"\\nTo start, execute the code in the notebook cells \"},{\"attributes\":{\"color\":\"#66a3e0\"},\"insert\":\"\\\"Importing the dataset\\\"\"},{\"insert\":\" and \"},{\"attributes\":{\"color\":\"#66a3e0\"},\"insert\":\"\\\"Visualising the dataset\\\"\"},{\"insert\":\" to load and generate the dataframe containing the data. This would be useful in the steps to come. \\n\"}]}"
      },
      "edge_connections": [
        {
          "id": "ffdb866f-7f89-40f9-b6e1-7ffb0391d15d",
          "connector": "left"
        },
        {
          "id": "023c7908-0c14-4c27-a465-ce9021cc61be",
          "connector": "right"
        },
        {
          "id": "5d317b44-c7b4-44d6-8cac-2f00105bf77c",
          "connector": "top"
        },
        {
          "id": "530306eb-aa92-425c-a36b-a03b67c17a75",
          "connector": "bottom"
        }
      ],
      "type": "note",
      "position": {
        "x": 972.2943725585936,
        "y": 229.60562133789062
      },
      "size": {
        "width": 256.16,
        "height": 258.28
      },
      "color": "#51455b"
    },
    {
      "id": "ed8466e2-4290-4ea2-96c3-a56e6986fda5",
      "title": "3. Model the domain knowledge",
      "type_specific": {
        "message": "{\"ops\":[{\"insert\":\"In the notebook \\\"bayesian_unsupervised.ipynb\\\", adjust the respective lines (linked to the card) to\\nspecify the \"},{\"attributes\":{\"color\":\"#ffc266\",\"bold\":true},\"insert\":\"known dependencies/relationships\"},{\"insert\":\" between the features\"},{\"attributes\":{\"list\":\"bullet\"},\"insert\":\"\\n\"},{\"insert\":\"\\n\"}]}"
      },
      "edge_connections": [
        {
          "id": "023c7908-0c14-4c27-a465-ce9021cc61be",
          "connector": "left"
        },
        {
          "id": "122ea292-7343-4745-91f1-261c43d844b7",
          "connector": "right"
        },
        {
          "id": "f8ec4618-575f-423b-acda-42561c5b3ace",
          "connector": "top"
        },
        {
          "id": "02a38459-c0fe-4636-9331-cc7727ccb563",
          "connector": "bottom"
        }
      ],
      "type": "note",
      "position": {
        "x": 1327.0482788085935,
        "y": 228.92984008789062
      },
      "size": {
        "width": 256.16,
        "height": 258.28
      },
      "color": "#51455b"
    },
    {
      "id": "20f4eed3-a061-42a2-8e75-36be4bcece8b",
      "title": "4. Run the model",
      "type_specific": {
        "message": "{\"ops\":[{\"insert\":\"Run the trials in the notebook \\\"bayesian_unsupervised.ipynb\\\":\\n\\nTo start, execute all the notebook cells in order (e.g. click the play icon at the top of the notebook) \\n\"}]}"
      },
      "edge_connections": [
        {
          "id": "122ea292-7343-4745-91f1-261c43d844b7",
          "connector": "left"
        },
        {
          "id": "a189356d-59e3-4dfd-8d17-0fa20d118088",
          "connector": "right"
        },
        {
          "id": "583daf7b-8155-44d0-adbe-a44310218963",
          "connector": "top"
        },
        {
          "id": "f9f6e90a-6901-436d-9b35-7ceba49e4f27",
          "connector": "bottom"
        }
      ],
      "type": "note",
      "position": {
        "x": 1685.3295288085935,
        "y": 228.98843383789062
      },
      "size": {
        "width": 256.16,
        "height": 258.28
      },
      "color": "#51455b"
    },
    {
      "id": "2c00c626-48a2-4521-9ecf-74afdcfc9fcb",
      "title": "5. Get the results",
      "type_specific": {
        "message": "{\"ops\":[{\"insert\":\"In the notebook \\\"bayesian_unsupervised.ipynb\\\",\\ngo to the \"},{\"attributes\":{\"background\":\"#b2b200\"},\"insert\":\"linked cell\"},{\"insert\":\" that displays the results\\n\"}]}"
      },
      "edge_connections": [
        {
          "id": "a189356d-59e3-4dfd-8d17-0fa20d118088",
          "connector": "left"
        },
        {
          "id": "19616ef7-deda-4731-8e6c-cc7d13847c8e",
          "connector": "right"
        },
        {
          "id": "c501f053-437e-45d4-a646-fc9e686ef80a",
          "connector": "top"
        },
        {
          "id": "282a7214-9d60-48c0-80d7-74a09f6f4684",
          "connector": "bottom"
        }
      ],
      "type": "note",
      "position": {
        "x": 2060.7201538085933,
        "y": 229.10562133789062
      },
      "size": {
        "width": 256.16,
        "height": 258.28
      },
      "color": "#51455b"
    },
    {
      "id": "5678348e-91e2-4805-b003-de908be5b41a",
      "title": "6. Interpret the results",
      "type_specific": {
        "message": "{\"ops\":[{\"insert\":\"Based on the results in 5. evaluate the model performance in the green card below.\\n\"}]}"
      },
      "edge_connections": [
        {
          "id": "19616ef7-deda-4731-8e6c-cc7d13847c8e",
          "connector": "left"
        },
        {
          "id": "8d03c66a-a5e2-400a-ad84-56c19cb7882a",
          "connector": "right"
        },
        {
          "id": "1d9e73a9-62c3-4095-bf49-b50f28770784",
          "connector": "top"
        },
        {
          "id": "370b5c33-803c-48cc-b43e-8979d1fd5861",
          "connector": "bottom"
        }
      ],
      "type": "note",
      "position": {
        "x": 2458.259216308593,
        "y": 229.16421508789062
      },
      "size": {
        "width": 256.16,
        "height": 258.28
      },
      "color": "#51455b"
    },
    {
      "id": "885b9e67-d7e4-44a3-a845-9115db406740",
      "title": "7. Export and use streamlit",
      "type_specific": {
        "message": "{\"ops\":[{\"insert\":\"After the notebook runs, a joblib file containing the data is exported to the ./out folder.\\n\\nProceed to 'streamlit_detect_outliers.ipynb' and run it. Copy the output link from the first cell to a new tab and change the last few digits (port) to the corresponding port in the second cell. This will open a streamlit web app that will import the trained models and data, and allow you to make outlier predictions with new inputs based on the trained models.\\n\"}]}"
      },
      "edge_connections": [
        {
          "id": "8d03c66a-a5e2-400a-ad84-56c19cb7882a",
          "connector": "left"
        },
        {
          "id": "bb8baa56-2fd5-4ecd-9b94-6857a2a9c20c",
          "connector": "right"
        }
      ],
      "type": "note",
      "position": {
        "x": 2866.579528808593,
        "y": 228.03140258789062
      },
      "size": {
        "width": 256.16,
        "height": 258.28
      },
      "color": "#51455b"
    },
    {
      "id": "c02bb200-3096-4dbb-aab2-1d3eb33318bf",
      "title": "About the experiment",
      "type_specific": {
        "message": "{\"ops\":[{\"insert\":\"It is useful to provide an overview of the use case, objective and general procedure of this outlier detection experiment. This would provide an introduction to the experiment in the summary.\\n\"}]}"
      },
      "edge_connections": [
        {
          "id": "7f34cda8-d6db-43b9-8f1b-269ce5eefdf5",
          "connector": "bottom"
        }
      ],
      "type": "note",
      "position": {
        "x": 614.2850685119629,
        "y": -91.59120035171509
      },
      "size": {
        "width": 256.16,
        "height": 258.28
      },
      "color": "#28337e"
    },
    {
      "id": "8c0fe5f7-0d1a-440b-9f9f-a36f67166d07",
      "title": "Experiment",
      "type_specific": {
        "message": "{\"ops\":[{\"insert\":\"In the summary card:\\ndescribe the \"},{\"attributes\":{\"color\":\"#66b966\",\"bold\":true},\"insert\":\"use case\"},{\"insert\":\",\"},{\"attributes\":{\"list\":\"bullet\"},\"insert\":\"\\n\"},{\"insert\":\"describe the \"},{\"attributes\":{\"color\":\"#66b966\",\"bold\":true},\"insert\":\"objective\"},{\"attributes\":{\"color\":\"#66b966\"},\"insert\":\" \"},{\"insert\":\"of the outlier detection,\"},{\"attributes\":{\"list\":\"bullet\"},\"insert\":\"\\n\"},{\"insert\":\"describe the \"},{\"attributes\":{\"color\":\"#66b966\",\"bold\":true},\"insert\":\"general procedure\"},{\"insert\":\" of the project.\"},{\"attributes\":{\"list\":\"bullet\"},\"insert\":\"\\n\"}]}"
      },
      "edge_connections": [
        {
          "id": "83e39d3a-b594-4907-85f1-bcb5587712f3",
          "connector": "top"
        },
        {
          "id": "fedaa8b2-695c-4999-b8f2-a338f6d62523",
          "connector": "bottom"
        }
      ],
      "type": "note",
      "position": {
        "x": 614.5975685119629,
        "y": 550.6297469139099
      },
      "size": {
        "width": 256.16,
        "height": 258.28
      },
      "color": "#51455b"
    },
    {
      "id": "c853386f-ab48-4154-b1ec-413e3ca22211",
      "title": "dataset",
      "type_specific": {
        "message": "{\"ops\":[{\"insert\":\"In the summary card:\\ndescribe the \"},{\"attributes\":{\"color\":\"#66b966\",\"bold\":true},\"insert\":\"dataset\"},{\"insert\":\",\"},{\"attributes\":{\"list\":\"bullet\"},\"insert\":\"\\n\"}]}"
      },
      "edge_connections": [
        {
          "id": "530306eb-aa92-425c-a36b-a03b67c17a75",
          "connector": "top"
        },
        {
          "id": "a094a68a-62cd-4ac8-9ef4-e53b458c8256",
          "connector": "bottom"
        }
      ],
      "type": "note",
      "position": {
        "x": 972.0350971221924,
        "y": 550.9891028404236
      },
      "size": {
        "width": 256.16,
        "height": 258.28
      },
      "color": "#51455b"
    },
    {
      "id": "a6f941a8-5cbc-4d56-bf7a-2201f70d9b34",
      "title": "domain knowledge",
      "type_specific": {
        "message": "{\"ops\":[{\"insert\":\"In the summary card:\\ndescribe the \"},{\"attributes\":{\"color\":\"#66b966\",\"bold\":true},\"insert\":\"domain knowledge\"},{\"insert\":\" about the data,\"},{\"attributes\":{\"list\":\"bullet\"},\"insert\":\"\\n\"},{\"insert\":\"\\n\"}]}"
      },
      "edge_connections": [
        {
          "id": "02a38459-c0fe-4636-9331-cc7727ccb563",
          "connector": "top"
        },
        {
          "id": "5b575092-d20c-4b00-818c-3fea471e870c",
          "connector": "bottom"
        }
      ],
      "type": "note",
      "position": {
        "x": 1326.4896869659424,
        "y": 553.5581946372986
      },
      "size": {
        "width": 256.16,
        "height": 258.28
      },
      "color": "#51455b"
    },
    {
      "id": "9a435c11-b757-4ff7-8b72-b8b8668f9972",
      "title": "model",
      "type_specific": {
        "message": "{\"ops\":[{\"insert\":\"In the summary card:\\nspecify the \"},{\"attributes\":{\"color\":\"#66b966\",\"bold\":true},\"insert\":\"model \"},{\"insert\":\"to be used.\"},{\"attributes\":{\"list\":\"bullet\"},\"insert\":\"\\n\"}]}"
      },
      "edge_connections": [
        {
          "id": "f9f6e90a-6901-436d-9b35-7ceba49e4f27",
          "connector": "top"
        },
        {
          "id": "cd26703d-0833-464e-9aea-8277696fbb7c",
          "connector": "bottom"
        }
      ],
      "type": "note",
      "position": {
        "x": 1685.2921772003174,
        "y": 558.6094641685486
      },
      "size": {
        "width": 256.16,
        "height": 258.28
      },
      "color": "#51455b"
    },
    {
      "id": "ba82ca18-4b0c-46f6-b382-38c4aaba19e8",
      "title": "results",
      "type_specific": {
        "message": "{\"ops\":[{\"insert\":\"In the summary card:\\nreport the \"},{\"attributes\":{\"color\":\"#66b966\",\"bold\":true},\"insert\":\"best parameters\"},{\"insert\":\" and \"},{\"attributes\":{\"color\":\"#66b966\",\"bold\":true},\"insert\":\"results \"},{\"insert\":\"reported by the outlier detection models.\"},{\"attributes\":{\"list\":\"bullet\"},\"insert\":\"\\n\"},{\"insert\":\"\\n\"}]}"
      },
      "edge_connections": [
        {
          "id": "282a7214-9d60-48c0-80d7-74a09f6f4684",
          "connector": "top"
        },
        {
          "id": "72b51f44-4504-4c43-a8f1-60b6ee853316",
          "connector": "bottom"
        }
      ],
      "type": "note",
      "position": {
        "x": 2061.8266010284424,
        "y": 563.4800696372986
      },
      "size": {
        "width": 256.16,
        "height": 258.28
      },
      "color": "#51455b"
    },
    {
      "id": "6bf59695-e730-448e-8f0e-59d4ec769541",
      "title": "interpret and improve",
      "type_specific": {
        "message": "{\"ops\":[{\"insert\":\"In the summary card:\\nreport and compare the best score to a benchmark score (if available)\"},{\"attributes\":{\"list\":\"bullet\"},\"insert\":\"\\n\"},{\"insert\":\"specify \"},{\"attributes\":{\"color\":\"#66b966\",\"bold\":true},\"insert\":\"possible ways to improve\"},{\"insert\":\" results if not satisfactory\"},{\"attributes\":{\"list\":\"bullet\"},\"insert\":\"\\n\"},{\"insert\":\"\\n\\n\"}]}"
      },
      "edge_connections": [
        {
          "id": "370b5c33-803c-48cc-b43e-8979d1fd5861",
          "connector": "top"
        },
        {
          "id": "52ef6514-2297-4e1f-9389-c01bc4629bd8",
          "connector": "bottom"
        }
      ],
      "type": "note",
      "position": {
        "x": 2456.9816303253174,
        "y": 563.4800696372986
      },
      "size": {
        "width": 256.16,
        "height": 258.28
      },
      "color": "#51455b"
    },
    {
      "id": "d2e3c86f-5a03-4990-aec6-2d05fefcaea8",
      "title": "The Dataset",
      "type_specific": {
        "message": "{\"ops\":[{\"insert\":\"We would need to import our dataset for training the models. It is important to understand the size, properties, and features of our dataset such that we can decide on if and how imbalanced the data is.\\n\\nSupervised outlier detection algorithms would require data outliers to be labeled.\\n\"}]}"
      },
      "edge_connections": [
        {
          "id": "5d317b44-c7b4-44d6-8cac-2f00105bf77c",
          "connector": "bottom"
        }
      ],
      "type": "note",
      "position": {
        "x": 971.8582458496095,
        "y": -91.36378479003908
      },
      "size": {
        "width": 256.16,
        "height": 258.28
      },
      "color": "#28337e"
    },
    {
      "id": "b56b5ec5-ff3c-4194-af24-ea8f078e3928",
      "title": "domain knowledge",
      "type_specific": {
        "message": "{\"ops\":[{\"insert\":\"With Bayesian Networks, we can model domain knowledge regarding the data; which could include known dependencies or mathematical relations between features. This allows the model to have a 'head-start' in when training with the data, and verifying/modelling in the domain knowledge.\\n\\nIn this template notebook, Halerium graphs allows one to identify the known statistical and mathematical relationships between features.\\n\"}]}"
      },
      "edge_connections": [
        {
          "id": "f8ec4618-575f-423b-acda-42561c5b3ace",
          "connector": "bottom"
        }
      ],
      "type": "note",
      "position": {
        "x": 1325.5174255371094,
        "y": -94.10499572753908
      },
      "size": {
        "width": 256.16,
        "height": 258.28
      },
      "color": "#28337e"
    },
    {
      "id": "91783328-8419-4719-beeb-2970db9f05b8",
      "title": "model",
      "type_specific": {
        "message": "{\"ops\":[{\"insert\":\"With the set up complete, you may now run the notebook(refer to outlier_detection_guide.board for a description of Bayesian models).\\n\\nYou may also adjust the parameters for the models in the corresponding cell. The cell will return a report of classification metrics if a supervised approach is used.\\n\\nThe notebook implements both a causal structure approach and a graphical construction approach.\\n\"}]}"
      },
      "edge_connections": [
        {
          "id": "583daf7b-8155-44d0-adbe-a44310218963",
          "connector": "bottom"
        }
      ],
      "type": "note",
      "position": {
        "x": 1685.3318786621094,
        "y": -95.20851135253908
      },
      "size": {
        "width": 256.16,
        "height": 258.28
      },
      "color": "#28337e"
    },
    {
      "id": "1f943717-839b-47bc-85e0-0f66a681c691",
      "title": "results",
      "type_specific": {
        "message": "{\"ops\":[{\"insert\":\"After the notebook has completed running, you can view the final results of all the models.\\n\"}]}"
      },
      "edge_connections": [
        {
          "id": "c501f053-437e-45d4-a646-fc9e686ef80a",
          "connector": "bottom"
        }
      ],
      "type": "note",
      "position": {
        "x": 2059.0769958496094,
        "y": -97.30323791503908
      },
      "size": {
        "width": 256.16,
        "height": 258.28
      },
      "color": "#28337e"
    },
    {
      "id": "e56926cb-3fef-42b1-a693-795fda7c5e02",
      "title": "interpret",
      "type_specific": {
        "message": "{\"ops\":[{\"insert\":\"Unlike with supervised metrics, there is no ground truth for a confusion matrix to be constructed.\\n\\nOften, we would require external validation of the identified outliers to determine if the models can predict the outliers accurately.\\n\\n\"}]}"
      },
      "edge_connections": [
        {
          "id": "1d9e73a9-62c3-4095-bf49-b50f28770784",
          "connector": "bottom"
        }
      ],
      "type": "note",
      "position": {
        "x": 2456.5818786621094,
        "y": -92.70851135253908
      },
      "size": {
        "width": 256.16,
        "height": 258.28
      },
      "color": "#28337e"
    },
    {
      "id": "0df8d960-c3c0-4a90-bdbf-0fc2fa200f34",
      "title": "8. COPY TO HYPOTHESIS BOARD (IF IN PROJECT-EXPERIMENT FOLDER)",
      "type_specific": {
        "message": "{\"ops\":[{\"insert\":\"Finally, if you are conducting the experiment in a project-experiment folder structure, copy the summary of the results and findings of this experiment to the corresponding card of this experiment on the hypothesis board.\\n\"}]}"
      },
      "edge_connections": [
        {
          "id": "bb8baa56-2fd5-4ecd-9b94-6857a2a9c20c",
          "connector": "left"
        }
      ],
      "type": "note",
      "position": {
        "x": 3299.22112,
        "y": 228.56136
      },
      "size": {
        "width": 245.48992,
        "height": 258.45056
      },
      "color": "#51455b"
    },
    {
      "id": "550f9c4c-e33f-4e23-b0ce-0d3a0a63391a",
      "title": "Summary",
      "type_specific": {
        "message": "{\"ops\":[{\"attributes\":{\"underline\":true},\"insert\":\"General\"},{\"attributes\":{\"header\":1},\"insert\":\"\\n\"},{\"insert\":\"\\n\"},{\"attributes\":{\"bold\":true},\"insert\":\"Use Case\"},{\"insert\":\"\\n\\n\\n\"},{\"attributes\":{\"bold\":true},\"insert\":\"Objective\"},{\"insert\":\"\\n\\n\\n\"},{\"attributes\":{\"bold\":true},\"insert\":\"General Procedure\"},{\"insert\":\"\\n\\n\\n\"},{\"attributes\":{\"underline\":true},\"insert\":\"Experiment details\"},{\"attributes\":{\"header\":1},\"insert\":\"\\n\"},{\"insert\":\"\\nDataset\"},{\"attributes\":{\"header\":2},\"insert\":\"\\n\"},{\"attributes\":{\"bold\":true},\"insert\":\"Name\"},{\"insert\":\"\\n\\n\\n\"},{\"attributes\":{\"bold\":true},\"insert\":\"Samples\"},{\"insert\":\"\\n\\n\\n\"},{\"attributes\":{\"bold\":true},\"insert\":\"Dimensions\"},{\"insert\":\"\\n\\n\\n\"},{\"attributes\":{\"bold\":true},\"insert\":\"Train-Test Split\"},{\"insert\":\"\\n\\n\\n\"},{\"attributes\":{\"bold\":true},\"insert\":\"Time Series\"},{\"insert\":\"\\n\\n\"},{\"attributes\":{\"header\":2},\"insert\":\"\\n\"},{\"attributes\":{\"underline\":true},\"insert\":\"Domain Knowledge\"},{\"attributes\":{\"header\":1},\"insert\":\"\\n\"},{\"insert\":\"\\nKnown Dependencies\"},{\"attributes\":{\"header\":2},\"insert\":\"\\n\"},{\"insert\":\"\\n\\nKnown Mathematical Relationships\"},{\"attributes\":{\"header\":2},\"insert\":\"\\n\"},{\"insert\":\"\\n\\nModel Type\"},{\"attributes\":{\"header\":2},\"insert\":\"\\n\"},{\"insert\":\"\\n\\n\"},{\"attributes\":{\"underline\":true},\"insert\":\"Results\"},{\"attributes\":{\"header\":1},\"insert\":\"\\n\"},{\"insert\":\"\\n\"},{\"attributes\":{\"header\":2},\"insert\":\"\\n\"},{\"insert\":\"\\nInterpret and Improve\"},{\"attributes\":{\"header\":2},\"insert\":\"\\n\"},{\"insert\":\"\\nAre the results accurate upon validation?\\n\\n\"}]}"
      },
      "edge_connections": [
        {
          "id": "2216240c-e677-453c-962a-50649cc36aa1",
          "connector": "bottom"
        },
        {
          "id": "fedaa8b2-695c-4999-b8f2-a338f6d62523",
          "connector": "top"
        },
        {
          "id": "a094a68a-62cd-4ac8-9ef4-e53b458c8256",
          "connector": "top"
        },
        {
          "id": "5b575092-d20c-4b00-818c-3fea471e870c",
          "connector": "top"
        },
        {
          "id": "cd26703d-0833-464e-9aea-8277696fbb7c",
          "connector": "top"
        },
        {
          "id": "72b51f44-4504-4c43-a8f1-60b6ee853316",
          "connector": "top"
        },
        {
          "id": "52ef6514-2297-4e1f-9389-c01bc4629bd8",
          "connector": "top"
        }
      ],
      "type": "note",
      "position": {
        "x": 1416.3125,
        "y": 1072.4580078125
      },
      "size": {
        "width": 501.92,
        "height": 501.2
      },
      "color": "#125059"
    },
    {
      "id": "aadd7699-a41e-4326-a27a-97d244fd8f32",
      "title": "Summary - example (Using example dataset)",
      "type_specific": {
        "message": "{\"ops\":[{\"attributes\":{\"underline\":true},\"insert\":\"General\"},{\"attributes\":{\"header\":1},\"insert\":\"\\n\"},{\"insert\":\"\\n\"},{\"attributes\":{\"bold\":true},\"insert\":\"Use Case\"},{\"insert\":\"\\nGiven the a dataset of ... without outlier labels, we would like to predict the cases of abnormal...\\n\\n\"},{\"attributes\":{\"bold\":true},\"insert\":\"Objective\"},{\"insert\":\"\\nTo detect outliers from the given dataset.\\n\\n\"},{\"attributes\":{\"bold\":true},\"insert\":\"General Procedure\"},{\"insert\":\"\\nImport data - Normalise the data - Set up causal structure and dependencies - Interpret and validate results\\n\\n\"},{\"attributes\":{\"underline\":true},\"insert\":\"Experiment details\"},{\"attributes\":{\"header\":1},\"insert\":\"\\n\"},{\"insert\":\"\\nDataset\"},{\"attributes\":{\"header\":2},\"insert\":\"\\n\"},{\"attributes\":{\"bold\":true},\"insert\":\"Name\"},{\"insert\":\"\\nheight and weight\\n\\n\"},{\"attributes\":{\"bold\":true},\"insert\":\"Samples\"},{\"insert\":\"\\n198\\n\\n\"},{\"attributes\":{\"bold\":true},\"insert\":\"Dimensions\"},{\"insert\":\"\\n5\\n\\n\"},{\"attributes\":{\"bold\":true},\"insert\":\"Train-Test Split\"},{\"insert\":\"\\n0.75:0.25\\n\\n\"},{\"attributes\":{\"bold\":true},\"insert\":\"Time Series\"},{\"insert\":\"\\nNo\\n\"},{\"attributes\":{\"header\":2},\"insert\":\"\\n\"},{\"attributes\":{\"underline\":true},\"insert\":\"Domain Knowledge\"},{\"attributes\":{\"header\":1},\"insert\":\"\\n\"},{\"insert\":\"\\nKnown Dependencies\"},{\"attributes\":{\"header\":2},\"insert\":\"\\n\"},{\"insert\":\"Height depends on age\\n\\nKnown Mathematical Relationships\"},{\"attributes\":{\"header\":2},\"insert\":\"\\n\"},{\"insert\":\"\\n\\nModel Type\"},{\"attributes\":{\"header\":2},\"insert\":\"\\n\"},{\"insert\":\"Halerium Graph\\n\\n\"},{\"attributes\":{\"underline\":true},\"insert\":\"Results\"},{\"attributes\":{\"header\":1},\"insert\":\"\\n\"},{\"insert\":{\"image\":\"data:image/png;base64, \"}},{\"insert\":\"\\n\"},{\"insert\":{\"image\":\"data:image/png;base64, \"}},{\"insert\":\"\\n\"},{\"attributes\":{\"header\":2},\"insert\":\"\\n\"},{\"insert\":\"\\nInterpret and Improve\"},{\"attributes\":{\"header\":2},\"insert\":\"\\n\"},{\"insert\":\"\\nAre the results accurate upon validation?\\n\\n\"}]}"
      },
      "edge_connections": [
        {
          "id": "2216240c-e677-453c-962a-50649cc36aa1",
          "connector": "top"
        }
      ],
      "type": "note",
      "position": {
        "x": 1415.9925,
        "y": 1688.9380078124998
      },
      "size": {
        "width": 499.36,
        "height": 490.96
      },
      "color": "#125059"
    }
  ],
  "edges": [
    {
      "id": "b44b81c0-d5e8-4d1b-b65a-82e831e6625c",
      "type": "solid_arrow",
      "node_connections": [
        "ac2233b1-cc3d-497b-9b67-39c6f0365a86",
        "f3fa4289-b853-4eb0-97b9-b361f7e37afc"
      ],
      "type_specific": {
        "annotation": ""
      }
    },
    {
      "id": "ffdb866f-7f89-40f9-b6e1-7ffb0391d15d",
      "type": "solid_arrow",
      "node_connections": [
        "f3fa4289-b853-4eb0-97b9-b361f7e37afc",
        "35aaa8c6-7a71-468d-94fc-5a659a6e5098"
      ],
      "type_specific": {
        "annotation": ""
      }
    },
    {
      "id": "023c7908-0c14-4c27-a465-ce9021cc61be",
      "type": "solid_arrow",
      "node_connections": [
        "35aaa8c6-7a71-468d-94fc-5a659a6e5098",
        "ed8466e2-4290-4ea2-96c3-a56e6986fda5"
      ],
      "type_specific": {
        "annotation": ""
      }
    },
    {
      "id": "122ea292-7343-4745-91f1-261c43d844b7",
      "type": "solid_arrow",
      "node_connections": [
        "ed8466e2-4290-4ea2-96c3-a56e6986fda5",
        "20f4eed3-a061-42a2-8e75-36be4bcece8b"
      ],
      "type_specific": {
        "annotation": ""
      }
    },
    {
      "id": "a189356d-59e3-4dfd-8d17-0fa20d118088",
      "type": "solid_arrow",
      "node_connections": [
        "20f4eed3-a061-42a2-8e75-36be4bcece8b",
        "2c00c626-48a2-4521-9ecf-74afdcfc9fcb"
      ],
      "type_specific": {
        "annotation": ""
      }
    },
    {
      "id": "19616ef7-deda-4731-8e6c-cc7d13847c8e",
      "type": "solid_arrow",
      "node_connections": [
        "2c00c626-48a2-4521-9ecf-74afdcfc9fcb",
        "5678348e-91e2-4805-b003-de908be5b41a"
      ],
      "type_specific": {
        "annotation": ""
      }
    },
    {
      "id": "8d03c66a-a5e2-400a-ad84-56c19cb7882a",
      "type": "solid_arrow",
      "node_connections": [
        "5678348e-91e2-4805-b003-de908be5b41a",
        "885b9e67-d7e4-44a3-a845-9115db406740"
      ],
      "type_specific": {
        "annotation": ""
      }
    },
    {
      "id": "7f34cda8-d6db-43b9-8f1b-269ce5eefdf5",
      "type": "dashed_arrow",
      "node_connections": [
        "c02bb200-3096-4dbb-aab2-1d3eb33318bf",
        "f3fa4289-b853-4eb0-97b9-b361f7e37afc"
      ],
      "type_specific": {
        "annotation": ""
      }
    },
    {
      "id": "83e39d3a-b594-4907-85f1-bcb5587712f3",
      "type": "dashed_arrow",
      "node_connections": [
        "8c0fe5f7-0d1a-440b-9f9f-a36f67166d07",
        "f3fa4289-b853-4eb0-97b9-b361f7e37afc"
      ],
      "type_specific": {
        "annotation": ""
      }
    },
    {
      "id": "5d317b44-c7b4-44d6-8cac-2f00105bf77c",
      "type": "dashed_arrow",
      "node_connections": [
        "d2e3c86f-5a03-4990-aec6-2d05fefcaea8",
        "35aaa8c6-7a71-468d-94fc-5a659a6e5098"
      ],
      "type_specific": {
        "annotation": ""
      }
    },
    {
      "id": "530306eb-aa92-425c-a36b-a03b67c17a75",
      "type": "dashed_arrow",
      "node_connections": [
        "35aaa8c6-7a71-468d-94fc-5a659a6e5098",
        "c853386f-ab48-4154-b1ec-413e3ca22211"
      ],
      "type_specific": {
        "annotation": ""
      }
    },
    {
      "id": "f8ec4618-575f-423b-acda-42561c5b3ace",
      "type": "dashed_arrow",
      "node_connections": [
        "b56b5ec5-ff3c-4194-af24-ea8f078e3928",
        "ed8466e2-4290-4ea2-96c3-a56e6986fda5"
      ],
      "type_specific": {
        "annotation": ""
      }
    },
    {
      "id": "02a38459-c0fe-4636-9331-cc7727ccb563",
      "type": "dashed_arrow",
      "node_connections": [
        "ed8466e2-4290-4ea2-96c3-a56e6986fda5",
        "a6f941a8-5cbc-4d56-bf7a-2201f70d9b34"
      ],
      "type_specific": {
        "annotation": ""
      }
    },
    {
      "id": "583daf7b-8155-44d0-adbe-a44310218963",
      "type": "dashed_arrow",
      "node_connections": [
        "91783328-8419-4719-beeb-2970db9f05b8",
        "20f4eed3-a061-42a2-8e75-36be4bcece8b"
      ],
      "type_specific": {
        "annotation": ""
      }
    },
    {
      "id": "f9f6e90a-6901-436d-9b35-7ceba49e4f27",
      "type": "dashed_arrow",
      "node_connections": [
        "20f4eed3-a061-42a2-8e75-36be4bcece8b",
        "9a435c11-b757-4ff7-8b72-b8b8668f9972"
      ],
      "type_specific": {
        "annotation": ""
      }
    },
    {
      "id": "c501f053-437e-45d4-a646-fc9e686ef80a",
      "type": "dashed_arrow",
      "node_connections": [
        "1f943717-839b-47bc-85e0-0f66a681c691",
        "2c00c626-48a2-4521-9ecf-74afdcfc9fcb"
      ],
      "type_specific": {
        "annotation": ""
      }
    },
    {
      "id": "282a7214-9d60-48c0-80d7-74a09f6f4684",
      "type": "dashed_arrow",
      "node_connections": [
        "ba82ca18-4b0c-46f6-b382-38c4aaba19e8",
        "2c00c626-48a2-4521-9ecf-74afdcfc9fcb"
      ],
      "type_specific": {
        "annotation": ""
      }
    },
    {
      "id": "1d9e73a9-62c3-4095-bf49-b50f28770784",
      "type": "dashed_arrow",
      "node_connections": [
        "e56926cb-3fef-42b1-a693-795fda7c5e02",
        "5678348e-91e2-4805-b003-de908be5b41a"
      ],
      "type_specific": {
        "annotation": ""
      }
    },
    {
      "id": "370b5c33-803c-48cc-b43e-8979d1fd5861",
      "type": "dashed_arrow",
      "node_connections": [
        "6bf59695-e730-448e-8f0e-59d4ec769541",
        "5678348e-91e2-4805-b003-de908be5b41a"
      ],
      "type_specific": {
        "annotation": ""
      }
    },
    {
      "id": "bb8baa56-2fd5-4ecd-9b94-6857a2a9c20c",
      "type": "solid_arrow",
      "node_connections": [
        "885b9e67-d7e4-44a3-a845-9115db406740",
        "0df8d960-c3c0-4a90-bdbf-0fc2fa200f34"
      ],
      "type_specific": {
        "annotation": ""
      }
    },
    {
      "id": "2216240c-e677-453c-962a-50649cc36aa1",
      "type": "dashed_arrow",
      "node_connections": [
        "550f9c4c-e33f-4e23-b0ce-0d3a0a63391a",
        "aadd7699-a41e-4326-a27a-97d244fd8f32"
      ],
      "type_specific": {
        "annotation": ""
      }
    },
    {
      "id": "fedaa8b2-695c-4999-b8f2-a338f6d62523",
      "type": "dashed_arrow",
      "node_connections": [
        "8c0fe5f7-0d1a-440b-9f9f-a36f67166d07",
        "550f9c4c-e33f-4e23-b0ce-0d3a0a63391a"
      ],
      "type_specific": {
        "annotation": ""
      }
    },
    {
      "id": "a094a68a-62cd-4ac8-9ef4-e53b458c8256",
      "type": "dashed_arrow",
      "node_connections": [
        "c853386f-ab48-4154-b1ec-413e3ca22211",
        "550f9c4c-e33f-4e23-b0ce-0d3a0a63391a"
      ],
      "type_specific": {
        "annotation": ""
      }
    },
    {
      "id": "5b575092-d20c-4b00-818c-3fea471e870c",
      "type": "dashed_arrow",
      "node_connections": [
        "a6f941a8-5cbc-4d56-bf7a-2201f70d9b34",
        "550f9c4c-e33f-4e23-b0ce-0d3a0a63391a"
      ],
      "type_specific": {
        "annotation": ""
      }
    },
    {
      "id": "cd26703d-0833-464e-9aea-8277696fbb7c",
      "type": "dashed_arrow",
      "node_connections": [
        "9a435c11-b757-4ff7-8b72-b8b8668f9972",
        "550f9c4c-e33f-4e23-b0ce-0d3a0a63391a"
      ],
      "type_specific": {
        "annotation": ""
      }
    },
    {
      "id": "72b51f44-4504-4c43-a8f1-60b6ee853316",
      "type": "dashed_arrow",
      "node_connections": [
        "ba82ca18-4b0c-46f6-b382-38c4aaba19e8",
        "550f9c4c-e33f-4e23-b0ce-0d3a0a63391a"
      ],
      "type_specific": {
        "annotation": ""
      }
    },
    {
      "id": "52ef6514-2297-4e1f-9389-c01bc4629bd8",
      "type": "dashed_arrow",
      "node_connections": [
        "6bf59695-e730-448e-8f0e-59d4ec769541",
        "550f9c4c-e33f-4e23-b0ce-0d3a0a63391a"
      ],
      "type_specific": {
        "annotation": ""
      }
    }
  ]
}