{"nodes":[{"id":"b2feb61d-a25b-499e-b3ed-7f5e422f78c8","title":"0. HOW TO USE THE BOARD","type_specific":{"message":"Go through the yellow cards in order. Follow the instructions on each of these cards.\n\nThe blue cards provide more information regarding the process at each step. \n\nAdjust and/or run code in the linked cells. Then, record the details on the green summary card.\n"},"edge_connections":[{"id":"b44b81c0-d5e8-4d1b-b65a-82e831e6625c","connector":"right"}],"type":"note","position":{"x":250.171875,"y":202.25599999999997},"size":{"width":256.16,"height":313.064},"color":"#513063"},{"id":"bd35f439-4006-4c9f-8ba4-5da55adc1f35","title":"1. DESCRIBE THE EXPERIMENT","type_specific":{"message":"No adjustments to notebook required.\n"},"edge_connections":[{"id":"b44b81c0-d5e8-4d1b-b65a-82e831e6625c","connector":"left"},{"id":"ffdb866f-7f89-40f9-b6e1-7ffb0391d15d","connector":"right"},{"id":"7f34cda8-d6db-43b9-8f1b-269ce5eefdf5","connector":"top"},{"id":"83e39d3a-b594-4907-85f1-bcb5587712f3","connector":"bottom"}],"type":"note","position":{"x":615.750244140625,"y":229.68185424804688},"size":{"width":256.16,"height":258.28},"color":"#51455b"},{"id":"91b472d3-82da-41e9-96e2-8389b64a2329","title":"2. IMPORT THE DATASET","type_specific":{"message":"In the notebook \"autoencoder.ipynb\", adjust the respective lines (linked to the card) to:\n- specify the **path** of the dataset file\n- specify if the data is **time-series**\n\n\nTo start, execute the code in the notebook cells \"Importing the dataset\" and \"Visualising the dataset\" to load and generate the dataframe containing the data. This would be useful in the steps to come.\n"},"edge_connections":[{"id":"ffdb866f-7f89-40f9-b6e1-7ffb0391d15d","connector":"left"},{"id":"023c7908-0c14-4c27-a465-ce9021cc61be","connector":"right"},{"id":"5d317b44-c7b4-44d6-8cac-2f00105bf77c","connector":"top"},{"id":"530306eb-aa92-425c-a36b-a03b67c17a75","connector":"bottom"}],"type":"note","position":{"x":972.2943725585936,"y":229.60562133789062},"size":{"width":256.16,"height":258.28},"color":"#51455b"},{"id":"81b8c3ec-0282-4d4d-bd42-87dc83b06dd9","title":"3. RUN THE MODELS","type_specific":{"message":"Run the trials in the notebook \"autoencoder.ipynb\":\n\nTo start, execute all the notebook cells in order (e.g. click the play icon at the top of the notebook)\n"},"edge_connections":[{"id":"023c7908-0c14-4c27-a465-ce9021cc61be","connector":"left"},{"id":"122ea292-7343-4745-91f1-261c43d844b7","connector":"right"},{"id":"f8ec4618-575f-423b-acda-42561c5b3ace","connector":"top"},{"id":"02a38459-c0fe-4636-9331-cc7727ccb563","connector":"bottom"}],"type":"note","position":{"x":1326.2290788085934,"y":230.56824008789062},"size":{"width":256.16,"height":258.28},"color":"#51455b"},{"id":"93af5872-6fc8-4da2-8179-97cb52aac109","title":"4. GET THE RESULTS","type_specific":{"message":"In the notebook \"autoencoder.ipynb\",\ngo to the linked cell that displays the results\n"},"edge_connections":[{"id":"122ea292-7343-4745-91f1-261c43d844b7","connector":"left"},{"id":"a189356d-59e3-4dfd-8d17-0fa20d118088","connector":"right"},{"id":"583daf7b-8155-44d0-adbe-a44310218963","connector":"top"},{"id":"f9f6e90a-6901-436d-9b35-7ceba49e4f27","connector":"bottom"}],"type":"note","position":{"x":1685.3295288085935,"y":228.98843383789062},"size":{"width":256.16,"height":258.28},"color":"#51455b"},{"id":"3bdb249f-9e28-43b4-84d6-9b4b31fb44e2","title":"5. INTERPRET THE RESULTS","type_specific":{"message":"Based on the results in 4. evaluate the autoencoder performance in the green card below.\n"},"edge_connections":[{"id":"a189356d-59e3-4dfd-8d17-0fa20d118088","connector":"left"},{"id":"19616ef7-deda-4731-8e6c-cc7d13847c8e","connector":"right"},{"id":"c501f053-437e-45d4-a646-fc9e686ef80a","connector":"top"},{"id":"282a7214-9d60-48c0-80d7-74a09f6f4684","connector":"bottom"}],"type":"note","position":{"x":2055.4772738085935,"y":229.10562133789062},"size":{"width":263.1505066666667,"height":258.28},"color":"#51455b"},{"id":"575b8adf-c236-4cdd-9ba9-de22998864ca","title":"6. EXPORT AND USE STREAMLIT","type_specific":{"message":"After the notebook runs, a joblib file containing the data is exported to the ./out folder.\n\nProceed to 'streamlit_detect_outliers.ipynb' and run it. Copy the output link from the first cell to a new tab and change the last few digits (port) to the corresponding port in the second cell. This will open a streamlit web app that will import the trained models and data, and allow you to make outlier predictions with new inputs based on the trained models.\n"},"edge_connections":[{"id":"19616ef7-deda-4731-8e6c-cc7d13847c8e","connector":"left"},{"id":"36f28e62-569f-4b9b-b3a8-2f0defbe928b","connector":"right"}],"type":"note","position":{"x":2458.259216308593,"y":229.16421508789062},"size":{"width":256.16,"height":258.28},"color":"#51455b"},{"id":"4e10b464-dc86-4345-9704-d196e6168857","title":"ABOUT THE EXPERIMENT","type_specific":{"message":"It is useful to provide an overview of the use case, objective and general procedure of this autoencoder outlier detection experiment. This would provide an introduction to the experiment in the summary.\n"},"edge_connections":[{"id":"7f34cda8-d6db-43b9-8f1b-269ce5eefdf5","connector":"bottom"}],"type":"note","position":{"x":615.1588818452963,"y":-91.59120035171509},"size":{"width":256.16,"height":258.28},"color":"#28337e"},{"id":"4d36e6bb-0500-4685-ab22-7fd9dfea026b","title":"EXPERIMENT","type_specific":{"message":"In the summary card: \n- describe the **use case**,\n- describe the **objective** of the outlier detection,\n- describe the **general procedure** of the project.\n\n\n#\n"},"edge_connections":[{"id":"83e39d3a-b594-4907-85f1-bcb5587712f3","connector":"top"},{"id":"cd9c3e48-10fb-4d96-b815-16fd281ecf79","connector":"bottom"}],"type":"note","position":{"x":614.5975685119629,"y":550.6297469139099},"size":{"width":256.16,"height":258.28},"color":"#51455b"},{"id":"ba9a61e7-f955-4ff7-a30c-94b6b9da1e66","title":"DATASET","type_specific":{"message":"In the summary card: \n- describe the **dataset**,\n\n#\n"},"edge_connections":[{"id":"530306eb-aa92-425c-a36b-a03b67c17a75","connector":"top"},{"id":"fd9e6d9e-bd25-4dbe-8e82-db5625c69526","connector":"bottom"}],"type":"note","position":{"x":972.0350971221924,"y":550.9891028404236},"size":{"width":256.16,"height":258.28},"color":"#51455b"},{"id":"a3ff552b-2559-4bdb-bb07-89fc79474588","title":"MODELS","type_specific":{"message":"In the summary card: \n- specify the **model parameters** and **architecture**\n\n#\n"},"edge_connections":[{"id":"02a38459-c0fe-4636-9331-cc7727ccb563","connector":"top"},{"id":"f6645b2b-746d-46c3-a159-6c412d179a36","connector":"bottom"}],"type":"note","position":{"x":1326.4896869659424,"y":552.7389946372986},"size":{"width":256.16,"height":258.28},"color":"#51455b"},{"id":"4f1be63d-9812-492e-9d76-60afc48e1468","title":"RESULTS","type_specific":{"message":"In the summary card: \n- report the **best parameters** and **results** reported by the outlier detection models.\n"},"edge_connections":[{"id":"f9f6e90a-6901-436d-9b35-7ceba49e4f27","connector":"top"},{"id":"ff02ddd7-664d-48ba-a197-529b387663b1","connector":"bottom"}],"type":"note","position":{"x":1684.418363866984,"y":558.6094641685486},"size":{"width":258.78144000000003,"height":258.28},"color":"#51455b"},{"id":"b31dcf98-c7ad-4d15-ab90-eebe01e238fe","title":"INTERPRET AND IMPROVE","type_specific":{"message":"In the summary card: \n- report and **compare** the model training and validation loss to a benchmark (if available)\n- specify **possible ways** to improve results if not satisfactory\n"},"edge_connections":[{"id":"282a7214-9d60-48c0-80d7-74a09f6f4684","connector":"top"},{"id":"e27022a1-6d7a-450a-b23a-cdb5dc7dbc32","connector":"bottom"}],"type":"note","position":{"x":2060.1882010284426,"y":557.8992696372986},"size":{"width":256.16,"height":258.28},"color":"#51455b"},{"id":"001c9ae2-0784-4c10-bfca-6ac743113995","title":"THE DATASET","type_specific":{"message":"We would need to import our dataset for training the models. \n\nNote that autoencoders need to be trained on a 'clean' dataset consisting of only non-outlier data points.\n\nIt is not required to divide the data set into sets for training and testing as unsupervised outlier detection algorithms would process and detect outliers in the existing data. Performance of models improve with more data if existing dataset is small.\n"},"edge_connections":[{"id":"5d317b44-c7b4-44d6-8cac-2f00105bf77c","connector":"bottom"}],"type":"note","position":{"x":971.8582458496095,"y":-91.36378479003908},"size":{"width":256.16,"height":258.28},"color":"#28337e"},{"id":"13ec721f-a941-44f5-b0c7-fecc5787659a","title":"MODELS","type_specific":{"message":"With the set up complete, you may now run the notebook.\n\nYou may also adjust the parameters for the models in the corresponding cell to adjust thresholds and the autoencoder architecture.\n\nThe notebook will run a sequential convolutional neural network as well as a LSTM autoencoder for time-series data.\n"},"edge_connections":[{"id":"f8ec4618-575f-423b-acda-42561c5b3ace","connector":"bottom"}],"type":"note","position":{"x":1325.5174255371094,"y":-94.10499572753908},"size":{"width":256.16,"height":258.28},"color":"#28337e"},{"id":"bffa7f36-6144-4d96-b3de-d6862b6bfe0f","title":"RESULTS","type_specific":{"message":"After the notebook has completed running, you can view the final results of all the models.\n\nNote that the model with the least total MAE will be selected and exported\n"},"edge_connections":[{"id":"583daf7b-8155-44d0-adbe-a44310218963","connector":"bottom"}],"type":"note","position":{"x":1685.3318786621094,"y":-95.20851135253908},"size":{"width":256.16,"height":258.28},"color":"#28337e"},{"id":"ea943d0a-2995-4be3-9ecc-752f4aaf0e4f","title":"INTERPRET THE RESULTS","type_specific":{"message":"Unlike with supervised metrics, there is no ground truth for a confusion matrix to be constructed. \n\nThe notebook will report the mean absolute error (MAE) of the reconstructed data, and set the highest error as the threshold. When new data is passed through the autoencoder, any reconstruction with a larger MAE than this threshold would be considered an outlier.\n\nOften, we would require external validation of the identified outliers to determine if the models can predict the outliers accurately.\n"},"edge_connections":[{"id":"c501f053-437e-45d4-a646-fc9e686ef80a","connector":"bottom"}],"type":"note","position":{"x":2059.0769958496094,"y":-98.32723791503908},"size":{"width":256.16,"height":258.28},"color":"#28337e"},{"id":"ff62d9d3-d73c-44c8-a9ef-78253640ce1e","title":"7. COPY TO HYPOTHESIS BOARD (IF IN PROJECT-EXPERIMENT FOLDER)","type_specific":{"message":"Finally, if you are conducting the experiment in a project-experiment folder structure, copy the summary of the results and findings of this experiment to the corresponding card of this experiment on the hypothesis board.\n"},"edge_connections":[{"id":"36f28e62-569f-4b9b-b3a8-2f0defbe928b","connector":"left"}],"type":"note","position":{"x":2848.4350000000013,"y":227.58241666666677},"size":{"width":247.45600000000007,"height":261.07200000000006},"color":"#51455b"},{"id":"99bef8b6-1560-48d1-8eae-bddcd34a8a33","title":"SUMMARY","type_specific":{"message":"# General\n\n**Use Case**\n\n\n**Objective**\n\n\n**General Procedure**\n\n\n# Experiment details\n\n## Dataset\n**Name**\n\n\n**Samples**\n\n\n**Dimensions**\n\n\n**Time Series**\n\n## \n# Model Architecture\n\n## Sequential Convolutional\n_________________________________________________________________\n Layer (type)                Output Shape              Param #   \n\nTotal params: \nTrainable params: \nNon-trainable params: \n\n## Sequential LSTM (for time series)\n_________________________________________________________________\n Layer (type)                Output Shape              Param #   \n\nTotal params: \nTrainable params: \nNon-trainable params: \n\n# Results\n\n## Sequential Convolutional\n\n**Reconstruction Error Threshold**\n\n\n## Sequential LSTM (for time series)\n\n**Reconstruction Error Threshold**\n\n\n## Interpret and Improve\n\nPerformance of autoencoder (total sum of MAE loss for all samples)\n**Sum MAE Loss**\n\n\n**LSTM Sum MAE Loss (for time series)**\n\n\nAre reconstruction thresholds low?\nLow -> Input data has little noise -> autoencoder will pick up on noise and outliers more easily.\n"},"edge_connections":[{"id":"0a44b46e-25a1-4886-912e-a6adcd47c2f3","connector":"bottom"},{"id":"cd9c3e48-10fb-4d96-b815-16fd281ecf79","connector":"top"},{"id":"fd9e6d9e-bd25-4dbe-8e82-db5625c69526","connector":"top"},{"id":"f6645b2b-746d-46c3-a159-6c412d179a36","connector":"top"},{"id":"ff02ddd7-664d-48ba-a197-529b387663b1","connector":"top"},{"id":"e27022a1-6d7a-450a-b23a-cdb5dc7dbc32","connector":"top"}],"type":"note","position":{"x":1242.780875,"y":1064.64990625},"size":{"width":511.648,"height":515.024},"color":"#125059"},{"id":"bec81060-b9ca-4405-8794-edccaf88cb0f","title":"SUMMARY - EXAMPLE (USING EXAMPLE DATASET)","type_specific":{"message":"# General\n\n**Use Case**\nGiven the a 'clean' dataset of ... , we would like to predict in new data the cases of abnormal...\n\n**Objective**\nTo train an autoencoder to detect outliers in new datasets.\n\n**General Procedure**\nImport data - Normalise data - Set up model architecture - Interpret and validate results\n\n# Experiment details\n\n## Dataset\n**Name**\nart daily small noise\n\n**Samples**\n4032\n\n**Dimensions**\n1\n\n**Time Series**\nYes\n\n# Model Architecture\n\n## Sequential Convolutional\n_________________________________________________________________\n Layer (type)                Output Shape              Param #   \n\n conv1d (Conv1D)             (None, 16, 32)            256       \n                                                                 \n dropout (Dropout)           (None, 16, 32)            0         \n                                                                 \n conv1d_1 (Conv1D)           (None, 8, 16)             3600      \n                                                                 \n conv1d_transpose (Conv1DTra  (None, 16, 16)           1808      \n nspose)                                                         \n                                                                 \n dropout_1 (Dropout)         (None, 16, 16)            0         \n                                                                 \n conv1d_transpose_1 (Conv1DT  (None, 32, 32)           3616      \n ranspose)                                                       \n                                                                 \n conv1d_transpose_2 (Conv1DT  (None, 32, 1)            225       \n ranspose)                                                       \n                                                                 \nTotal params: 9,505\nTrainable params: 9,505\nNon-trainable params: 0\n\n## Sequential LSTM (for time series)\n_________________________________________________________________\n Layer (type)                Output Shape              Param #   \n\n lstm (LSTM)                 (None, 64)                16896     \n                                                                 \n dropout_2 (Dropout)         (None, 64)                0         \n                                                                 \n repeat_vector (RepeatVector  (None, 32, 64)           0         \n )                                                               \n                                                                 \n lstm_1 (LSTM)               (None, 32, 64)            33024     \n                                                                 \n dropout_3 (Dropout)         (None, 32, 64)            0         \n                                                                 \n time_distributed (TimeDistr  (None, 32, 1)            65        \n ibuted)                                                         \n                                                                 \nTotal params: 49,985\nTrainable params: 49,985\nNon-trainable params: 0\n\n# Results\n\n## Sequential Convolutional\n![](attachment:20221116T093411391Z441)\n**Reconstruction Error Threshold**\n0.19561091\n\n\n## Sequential LSTM (for time series)\n![](attachment:20221116T093411391Z910)\n**Reconstruction Error Threshold**\n0.47766873\n\n## Interpret and Improve\n\nPerformance of autoencoder (total sum of MAE loss for all samples)\n**Sum MAE Loss**\n307.21433789\n\n**LSTM Sum MAE Loss (for time series)**\n452.26150746\n\nAre reconstruction thresholds low?\nLow -> Input data has little noise -> autoencoder will pick up on noise and outliers more easily.\nYes, reconstruction thresholds are low( < 0.5 )\n"},"edge_connections":[{"id":"0a44b46e-25a1-4886-912e-a6adcd47c2f3","connector":"top"}],"type":"note","position":{"x":1242.780875,"y":1717.9619375},"size":{"width":513.696,"height":539.6},"color":"#125059","attachments":{"20221116T093411391Z441":{"image/png":"%"},"20221116T093411391Z910":{"image/png":"%"}}}],"edges":[{"id":"b44b81c0-d5e8-4d1b-b65a-82e831e6625c","type":"solid_arrow","node_connections":["b2feb61d-a25b-499e-b3ed-7f5e422f78c8","bd35f439-4006-4c9f-8ba4-5da55adc1f35"],"type_specific":{"annotation":""}},{"id":"ffdb866f-7f89-40f9-b6e1-7ffb0391d15d","type":"solid_arrow","node_connections":["bd35f439-4006-4c9f-8ba4-5da55adc1f35","91b472d3-82da-41e9-96e2-8389b64a2329"],"type_specific":{"annotation":""}},{"id":"023c7908-0c14-4c27-a465-ce9021cc61be","type":"solid_arrow","node_connections":["91b472d3-82da-41e9-96e2-8389b64a2329","81b8c3ec-0282-4d4d-bd42-87dc83b06dd9"],"type_specific":{"annotation":""}},{"id":"122ea292-7343-4745-91f1-261c43d844b7","type":"solid_arrow","node_connections":["81b8c3ec-0282-4d4d-bd42-87dc83b06dd9","93af5872-6fc8-4da2-8179-97cb52aac109"],"type_specific":{"annotation":""}},{"id":"a189356d-59e3-4dfd-8d17-0fa20d118088","type":"solid_arrow","node_connections":["93af5872-6fc8-4da2-8179-97cb52aac109","3bdb249f-9e28-43b4-84d6-9b4b31fb44e2"],"type_specific":{"annotation":""}},{"id":"19616ef7-deda-4731-8e6c-cc7d13847c8e","type":"solid_arrow","node_connections":["3bdb249f-9e28-43b4-84d6-9b4b31fb44e2","575b8adf-c236-4cdd-9ba9-de22998864ca"],"type_specific":{"annotation":""}},{"id":"7f34cda8-d6db-43b9-8f1b-269ce5eefdf5","type":"dashed_arrow","node_connections":["4e10b464-dc86-4345-9704-d196e6168857","bd35f439-4006-4c9f-8ba4-5da55adc1f35"],"type_specific":{"annotation":""}},{"id":"83e39d3a-b594-4907-85f1-bcb5587712f3","type":"dashed_arrow","node_connections":["4d36e6bb-0500-4685-ab22-7fd9dfea026b","bd35f439-4006-4c9f-8ba4-5da55adc1f35"],"type_specific":{"annotation":""}},{"id":"5d317b44-c7b4-44d6-8cac-2f00105bf77c","type":"dashed_arrow","node_connections":["001c9ae2-0784-4c10-bfca-6ac743113995","91b472d3-82da-41e9-96e2-8389b64a2329"],"type_specific":{"annotation":""}},{"id":"530306eb-aa92-425c-a36b-a03b67c17a75","type":"dashed_arrow","node_connections":["91b472d3-82da-41e9-96e2-8389b64a2329","ba9a61e7-f955-4ff7-a30c-94b6b9da1e66"],"type_specific":{"annotation":""}},{"id":"f8ec4618-575f-423b-acda-42561c5b3ace","type":"dashed_arrow","node_connections":["13ec721f-a941-44f5-b0c7-fecc5787659a","81b8c3ec-0282-4d4d-bd42-87dc83b06dd9"],"type_specific":{"annotation":""}},{"id":"02a38459-c0fe-4636-9331-cc7727ccb563","type":"dashed_arrow","node_connections":["81b8c3ec-0282-4d4d-bd42-87dc83b06dd9","a3ff552b-2559-4bdb-bb07-89fc79474588"],"type_specific":{"annotation":""}},{"id":"583daf7b-8155-44d0-adbe-a44310218963","type":"dashed_arrow","node_connections":["bffa7f36-6144-4d96-b3de-d6862b6bfe0f","93af5872-6fc8-4da2-8179-97cb52aac109"],"type_specific":{"annotation":""}},{"id":"f9f6e90a-6901-436d-9b35-7ceba49e4f27","type":"dashed_arrow","node_connections":["93af5872-6fc8-4da2-8179-97cb52aac109","4f1be63d-9812-492e-9d76-60afc48e1468"],"type_specific":{"annotation":""}},{"id":"c501f053-437e-45d4-a646-fc9e686ef80a","type":"dashed_arrow","node_connections":["ea943d0a-2995-4be3-9ecc-752f4aaf0e4f","3bdb249f-9e28-43b4-84d6-9b4b31fb44e2"],"type_specific":{"annotation":""}},{"id":"282a7214-9d60-48c0-80d7-74a09f6f4684","type":"dashed_arrow","node_connections":["b31dcf98-c7ad-4d15-ab90-eebe01e238fe","3bdb249f-9e28-43b4-84d6-9b4b31fb44e2"],"type_specific":{"annotation":""}},{"id":"36f28e62-569f-4b9b-b3a8-2f0defbe928b","type":"solid_arrow","node_connections":["575b8adf-c236-4cdd-9ba9-de22998864ca","ff62d9d3-d73c-44c8-a9ef-78253640ce1e"],"type_specific":{"annotation":""}},{"id":"0a44b46e-25a1-4886-912e-a6adcd47c2f3","type":"dashed_arrow","node_connections":["99bef8b6-1560-48d1-8eae-bddcd34a8a33","bec81060-b9ca-4405-8794-edccaf88cb0f"],"type_specific":{"annotation":""}},{"id":"cd9c3e48-10fb-4d96-b815-16fd281ecf79","type":"dashed_arrow","node_connections":["4d36e6bb-0500-4685-ab22-7fd9dfea026b","99bef8b6-1560-48d1-8eae-bddcd34a8a33"],"type_specific":{"annotation":""}},{"id":"fd9e6d9e-bd25-4dbe-8e82-db5625c69526","type":"dashed_arrow","node_connections":["ba9a61e7-f955-4ff7-a30c-94b6b9da1e66","99bef8b6-1560-48d1-8eae-bddcd34a8a33"],"type_specific":{"annotation":""}},{"id":"f6645b2b-746d-46c3-a159-6c412d179a36","type":"dashed_arrow","node_connections":["a3ff552b-2559-4bdb-bb07-89fc79474588","99bef8b6-1560-48d1-8eae-bddcd34a8a33"],"type_specific":{"annotation":""}},{"id":"ff02ddd7-664d-48ba-a197-529b387663b1","type":"dashed_arrow","node_connections":["4f1be63d-9812-492e-9d76-60afc48e1468","99bef8b6-1560-48d1-8eae-bddcd34a8a33"],"type_specific":{"annotation":""}},{"id":"e27022a1-6d7a-450a-b23a-cdb5dc7dbc32","type":"dashed_arrow","node_connections":["b31dcf98-c7ad-4d15-ab90-eebe01e238fe","99bef8b6-1560-48d1-8eae-bddcd34a8a33"],"type_specific":{"annotation":""}}]}